---
 # "nat_private_rt.yml" file contains the routing table entry for private subnet
 - include_vars: nat_private_rt.yml

 - name: Search for Ubuntu AMI
   ec2_ami_search:
     region={{ vpc_region|default('us-east-1') }}
     distro={{ linux_distribution }}
     release={{ ubuntu_release }}
     store={{ ami_store }}
     virt={{ virutalization_type }}
     arch={{ cpu_architecture }}
   register: imgae_id
 
 - name: NAT | Create the NAT Instance
   local_action:
     module: ec2
     region: "{{ vpc_region }}"
     group: "{{ group_name }}"
     keypair: "{{ key_name }}"
     instance_type: "{{ nat_instance_type }}"
     image: "{{ imgae_id.ami }}"
     vpc_subnet_id: "{{ public_subnet }}"
     private_ip: "{{ nat_private_ip }}"
     source_dest_check: False
     wait: True
     wait_timeout: 500
     instance_tags:
       Name: "{{ vpc_name }}_NAT_Instance"
     exact_count: 1
     count_tag: 
       Name: "{{ vpc_name }}_NAT_Instance"
   register: ec2

 - name: NAT | Set the EC2 instance id as fact
   set_fact:
     ec2_inst_id : "{{ item.id }}"
   with_items: ec2.instances

 - name: NAT | Associate new EIP to the NAT Instance
   local_action:
     module: ec2_eip
     region: "{{ vpc_region }}"
     instance_id: "{{ ec2_inst_id }}"
     in_vpc: True
   when: ec2.changed
   register: eip

 - name: NAT | Add the newly created EC2 instance(s) to the local host group(located inside the directory)
   local_action: lineinfile 
                 dest="./hosts" 
                 regexp="{{ eip.public_ip }}"
                 insertafter="[nat]"
                 line="{{ eip.public_ip }}"
   when: eip.changed

 - name: NAT | Redefine VPC after creating the NAT instance
   local_action:
     module: ec2_vpc
     region: "{{ vpc_region }}"
     state: present
     cidr_block: "{{ vpc_cidr_block }}"
     resource_tags: { "Name":"{{ vpc_name }}_vpc" }
     subnets: "{{ vpc_subnets }}"
     internet_gateway: yes
     route_tables: "{{ public_subnet_rt + private_subnet_rt }}"
